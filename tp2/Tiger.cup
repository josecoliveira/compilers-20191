package lexsyn;

import java_cup.runtime.*;

parser code {:
  public static void main(String args[]) throws Exception {
		System.out.println("----------------------");
		parser myParser = new parser(new Yylex(System.in));
		myParser.parse();
		System.out.print("Program accepted.");
	}
:}

/* Terminals (tokens returned by the scanner). */
terminal            IF, LCBRACK, SEMI, PLUS, MINUS, TIMES, UMINUS, LPAREN, RPAREN;
terminal Integer    NUMBER;        // our scanner provides numbers as integers

/* Non terminals */
non terminal            expr_list;
non terminal Integer    expr;      // used to store evaluated subexpressions

/* Precedences */
precedence left PLUS, MINUS;
precedence left TIMES;
precedence left UMINUS;

/* The grammar rules */
expr_list ::= expr_list expr:e SEMI         {: System.out.println(e);:}
            | expr:e SEMI                   {: System.out.println(e);:}
;
expr      ::= expr:e1 PLUS  expr:e2         {: System.out.println(e1);System.out.println(e2);:}
             | expr:e1 MINUS expr:e2        {: System.out.println(e1);System.out.println(e2);:}
             | expr:e1 TIMES expr:e2        {: System.out.println(e1);System.out.println(e2);:}
             | MINUS expr:e                 {: System.out.println(e);:}
  	     %prec UMINUS
       | LPAREN expr:e RPAREN	         {: System.out.println(e);:}
       | NUMBER:n	                     {: System.out.println(n);:}
             ;